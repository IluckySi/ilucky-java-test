D:\core\git2018\ilucky-java-test\ilucky-test-asm\target\classes\com\ilucky\test\asm\methodvisitor>javap -c MethodVisitorTest2
警告: 二进制文件MethodVisitorTest2包含com.ilucky.test.asm.methodvisitor.MethodVisitorTest2
Compiled from "MethodVisitorTest2.java"
public class com.ilucky.test.asm.methodvisitor.MethodVisitorTest2 {
  public com.ilucky.test.asm.methodvisitor.MethodVisitorTest2();
    Code:
       0: aload_0
       1: invokespecial #8                  // Method java/lang/Object."<init>":()V
       4: return

  public void throwsException() throws java.lang.Exception;
    Code:
       0: new           #16                 // class java/lang/Exception
       3: dup
       4: ldc           #18                 // String MyException
       6: invokespecial #20                 // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
       9: athrow

  public void tryCatchTest();
    Code:
       0: lconst_1
       1: invokestatic  #24                 // Method java/lang/Thread.sleep:(J)V
       4: goto          12
       7: astore_1
       8: aload_1
       9: invokevirtual #30                 // Method java/lang/Exception.printStackTrace:()V
      12: return
    Exception table:
       from    to  target type
           0     4     7   Class java/lang/Exception

  public void tryCatch();
    Code:
       0: iconst_0
       1: istore_1
       2: bipush        10
       4: iload_1
       5: idiv
       6: istore_2
       7: getstatic     #37                 // Field java/lang/System.out:Ljava/io/PrintStream;
      10: iload_2
      11: invokevirtual #43                 // Method java/io/PrintStream.println:(I)V
      14: goto          22
      17: astore_2
      18: aload_2
      19: invokevirtual #30                 // Method java/lang/Exception.printStackTrace:()V
      22: return
    Exception table:
       from    to  target type
           2    14    17   Class java/lang/Exception

  public int manyInt(int, int, int, int);
    Code:
       0: iload_1
       1: iload_2
       2: iadd
       3: iload_3
       4: iadd
       5: iload         4
       7: iadd
       8: istore        5
      10: iload         5
      12: ireturn

  public long manyLong(long, long, long, long);
    Code:
       0: lload_1
       1: lload_3
       2: ladd
       3: lload         5
       5: ladd
       6: lload         7
       8: ladd
       9: lstore        9
      11: lload         9
      13: lreturn
}

D:\core\git2018\ilucky-java-test\ilucky-test-asm\target\classes\com\ilucky\test\asm\methodvisitor>

------------------------------------------------------------------------------------------------------

D:\core\git2018\ilucky-java-test\ilucky-test-asm\target\classes\com\ilucky\test\asm\methodvisitor>javap -verbose MethodVisitorTes
警告: 二进制文件MethodVisitorTest2包含com.ilucky.test.asm.methodvisitor.MethodVisitorTest2
Classfile /D:/core/git2018/ilucky-java-test/ilucky-test-asm/target/classes/com/ilucky/test/asm/methodvisitor/MethodVisitorTest2.c
  Last modified 2018-8-2; size 1414 bytes
  MD5 checksum 3545565dbcf8d2ed6c88ab7b358da7b3
  Compiled from "MethodVisitorTest2.java"
public class com.ilucky.test.asm.methodvisitor.MethodVisitorTest2
  minor version: 0
  major version: 51
  flags: ACC_PUBLIC, ACC_SUPER
Constant pool:
   #1 = Class              #2             // com/ilucky/test/asm/methodvisitor/MethodVisitorTest2
   #2 = Utf8               com/ilucky/test/asm/methodvisitor/MethodVisitorTest2
   #3 = Class              #4             // java/lang/Object
   #4 = Utf8               java/lang/Object
   #5 = Utf8               <init>
   #6 = Utf8               ()V
   #7 = Utf8               Code
   #8 = Methodref          #3.#9          // java/lang/Object."<init>":()V
   #9 = NameAndType        #5:#6          // "<init>":()V
  #10 = Utf8               LineNumberTable
  #11 = Utf8               LocalVariableTable
  #12 = Utf8               this
  #13 = Utf8               Lcom/ilucky/test/asm/methodvisitor/MethodVisitorTest2;
  #14 = Utf8               throwsException
  #15 = Utf8               Exceptions
  #16 = Class              #17            // java/lang/Exception
  #17 = Utf8               java/lang/Exception
  #18 = String             #19            // MyException
  #19 = Utf8               MyException
  #20 = Methodref          #16.#21        // java/lang/Exception."<init>":(Ljava/lang/String;)V
  #21 = NameAndType        #5:#22         // "<init>":(Ljava/lang/String;)V
  #22 = Utf8               (Ljava/lang/String;)V
  #23 = Utf8               tryCatchTest
  #24 = Methodref          #25.#27        // java/lang/Thread.sleep:(J)V
  #25 = Class              #26            // java/lang/Thread
  #26 = Utf8               java/lang/Thread
  #27 = NameAndType        #28:#29        // sleep:(J)V
  #28 = Utf8               sleep
  #29 = Utf8               (J)V
  #30 = Methodref          #16.#31        // java/lang/Exception.printStackTrace:()V
  #31 = NameAndType        #32:#6         // printStackTrace:()V
  #32 = Utf8               printStackTrace
  #33 = Utf8               e
  #34 = Utf8               Ljava/lang/Exception;
  #35 = Utf8               StackMapTable
  #36 = Utf8               tryCatch
  #37 = Fieldref           #38.#40        // java/lang/System.out:Ljava/io/PrintStream;
  #38 = Class              #39            // java/lang/System
  #39 = Utf8               java/lang/System
  #40 = NameAndType        #41:#42        // out:Ljava/io/PrintStream;
  #41 = Utf8               out
  #42 = Utf8               Ljava/io/PrintStream;
  #43 = Methodref          #44.#46        // java/io/PrintStream.println:(I)V
  #44 = Class              #45            // java/io/PrintStream
  #45 = Utf8               java/io/PrintStream
  #46 = NameAndType        #47:#48        // println:(I)V
  #47 = Utf8               println
  #48 = Utf8               (I)V
  #49 = Utf8               i
  #50 = Utf8               I
  #51 = Utf8               result
  #52 = Utf8               manyInt
  #53 = Utf8               (IIII)I
  #54 = Utf8               i1
  #55 = Utf8               i2
  #56 = Utf8               i3
  #57 = Utf8               i4
  #58 = Utf8               manyLong
  #59 = Utf8               (JJJJ)J
  #60 = Utf8               l1
  #61 = Utf8               J
  #62 = Utf8               l2
  #63 = Utf8               l3
  #64 = Utf8               l4
  #65 = Utf8               l
  #66 = Utf8               SourceFile
  #67 = Utf8               MethodVisitorTest2.java
{
  public com.ilucky.test.asm.methodvisitor.MethodVisitorTest2();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=1, locals=1, args_size=1
         0: aload_0
         1: invokespecial #8                  // Method java/lang/Object."<init>":()V
         4: return
      LineNumberTable:
        line 3: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0       5     0  this   Lcom/ilucky/test/asm/methodvisitor/MethodVisitorTest2;

  public void throwsException() throws java.lang.Exception;
    descriptor: ()V
    flags: ACC_PUBLIC
    Exceptions:
      throws java.lang.Exception
    Code:
      stack=3, locals=1, args_size=1
         0: new           #16                 // class java/lang/Exception
         3: dup
         4: ldc           #18                 // String MyException
         6: invokespecial #20                 // Method java/lang/Exception."<init>":(Ljava/lang/String;)V
         9: athrow
      LineNumberTable:
        line 23: 0
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      10     0  this   Lcom/ilucky/test/asm/methodvisitor/MethodVisitorTest2;

  public void tryCatchTest();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=2, args_size=1
         0: lconst_1
         1: invokestatic  #24                 // Method java/lang/Thread.sleep:(J)V
         4: goto          12
         7: astore_1
         8: aload_1
         9: invokevirtual #30                 // Method java/lang/Exception.printStackTrace:()V
        12: return
      Exception table:
         from    to  target type
             0     4     7   Class java/lang/Exception
      LineNumberTable:
        line 53: 0
        line 54: 4
        line 55: 8
        line 57: 12
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcom/ilucky/test/asm/methodvisitor/MethodVisitorTest2;
            8       4     1     e   Ljava/lang/Exception;
      StackMapTable: number_of_entries = 2
        frame_type = 71 /* same_locals_1_stack_item */
          stack = [ class java/lang/Exception ]
        frame_type = 4 /* same */

  public void tryCatch();
    descriptor: ()V
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=3, args_size=1
         0: iconst_0
         1: istore_1
         2: bipush        10
         4: iload_1
         5: idiv
         6: istore_2
         7: getstatic     #37                 // Field java/lang/System.out:Ljava/io/PrintStream;
        10: iload_2
        11: invokevirtual #43                 // Method java/io/PrintStream.println:(I)V
        14: goto          22
        17: astore_2
        18: aload_2
        19: invokevirtual #30                 // Method java/lang/Exception.printStackTrace:()V
        22: return
      Exception table:
         from    to  target type
             2    14    17   Class java/lang/Exception
      LineNumberTable:
        line 101: 0
        line 103: 2
        line 104: 7
        line 105: 14
        line 106: 18
        line 108: 22
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      23     0  this   Lcom/ilucky/test/asm/methodvisitor/MethodVisitorTest2;
            2      21     1     i   I
            7       7     2 result   I
           18       4     2     e   Ljava/lang/Exception;
      StackMapTable: number_of_entries = 2
        frame_type = 255 /* full_frame */
          offset_delta = 17
          locals = [ class com/ilucky/test/asm/methodvisitor/MethodVisitorTest2, int ]
          stack = [ class java/lang/Exception ]
        frame_type = 4 /* same */

  public int manyInt(int, int, int, int);
    descriptor: (IIII)I
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=6, args_size=5
         0: iload_1
         1: iload_2
         2: iadd
         3: iload_3
         4: iadd
         5: iload         4
         7: iadd
         8: istore        5
        10: iload         5
        12: ireturn
      LineNumberTable:
        line 145: 0
        line 146: 10
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      13     0  this   Lcom/ilucky/test/asm/methodvisitor/MethodVisitorTest2;
            0      13     1    i1   I
            0      13     2    i2   I
            0      13     3    i3   I
            0      13     4    i4   I
           10       3     5     i   I

  public long manyLong(long, long, long, long);
    descriptor: (JJJJ)J
    flags: ACC_PUBLIC
    Code:
      stack=4, locals=11, args_size=5
         0: lload_1
         1: lload_3
         2: ladd
         3: lload         5
         5: ladd
         6: lload         7
         8: ladd
         9: lstore        9
        11: lload         9
        13: lreturn
      LineNumberTable:
        line 182: 0
        line 183: 11
      LocalVariableTable:
        Start  Length  Slot  Name   Signature
            0      14     0  this   Lcom/ilucky/test/asm/methodvisitor/MethodVisitorTest2;
            0      14     1    l1   J
            0      14     3    l2   J
            0      14     5    l3   J
            0      14     7    l4   J
           11       3     9     l   J
}
SourceFile: "MethodVisitorTest2.java"

D:\core\git2018\ilucky-java-test\ilucky-test-asm\target\classes\com\ilucky\test\asm\methodvisitor>